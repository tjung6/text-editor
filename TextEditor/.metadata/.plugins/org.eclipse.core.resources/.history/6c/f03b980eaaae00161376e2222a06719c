package gui;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.BorderFactory;
import javax.swing.JTextArea;
import javax.swing.KeyStroke;

public class TextEditorArea extends JTextArea { 
	private String fontName = "Calibri"; 
	private int fontStyle = Font.PLAIN; 
	private int fontSize = 20; 
	private Model m = new Model(); 

	
	public TextEditorArea() { 
		setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));
		// Sets font style & size 
		setFont(new Font(fontName, fontStyle, fontSize));
		// Sets background color 
		setBackground(Color.BLACK);
		// Sets font color 
		setForeground(Color.WHITE);
		setCaretColor(Color.WHITE); 
		
		addKeyListener(new AL()); 
	}

	// extends KeyAdapter ?? 
	class AL implements KeyListener {
		public void keyPressed(KeyEvent e) {
			
		}
			
		public void keyReleased(KeyEvent e) {

		}
			
		public void keyTyped(KeyEvent e) { 
			if (e.getKeyChar() >= '1' && e.getKeyChar() <= '4' && getText().length() != 0) {
				int num = getCaretPosition(); 
				int num2 = getCaretPosition() - 1;
				
				// ha3o	or ca2i  
				// dui1 or de1i 
				// dou1
				if (((getText().charAt(num2) == 'o' || getText().charAt(num2) == 'u') && 
						(m.getVowels().containsValue(getText().charAt(num2 - 1)) || m.getAccents().containsValue(getText().charAt(num2 - 1) + ""))) || 
						(getText().charAt(num2) == 'i' && 
						((getText().charAt(num2 - 1) == 'a' || getText().charAt(num2 - 1) == 'e') || m.getAccents().containsValue(getText().charAt(num2 - 1) + "")))) {
					num2--; 
				}
					
				while (num2 >= 0 && !m.getVowels().containsValue(getText().charAt(num2)) && !m.getAccents().containsValue(getText().charAt(num2) + "")) {
					num2--; 
				}
					 
				if (num2 < 0) {
					return; 
				}
					
				char letter = getText().charAt(num2);
				setCaretPosition(num2 + 1);
				String s1 = getText().substring(0, getCaretPosition() - 1);
				String s2 = getText().substring(getCaretPosition());
					
				if (m.getVowels().containsValue(letter)) {
					setText(s1 + m.getAccents().get(letter + e.getKeyChar()) + s2); 
					e.consume();
					setCaretPosition(num);
				}
					
				if (m.getAccents().containsValue(letter + "")) {
					setText(s1 + m.getAccents().get(m.getVowels().get(letter + "") + e.getKeyChar()) + s2); 
					e.consume();
					setCaretPosition(num);
				}
			}
		}
	}  
}